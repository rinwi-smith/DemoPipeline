pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-token', url: 'https://github.com/rinwi-smith/DemoPipeline.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }
        stage('Lint Code') {
            steps {
                bat 'npm run lint'   
                echo 'Linting complete'
            }
        }
        stage('Test') {
            steps {
                script {
                    // Use the local version of nyc
                    bat 'node_modules\\.bin\\nyc npm test'
                }
                bat 'npm test'
                echo 'Testing complete'
            }
        }
        stage('Code Coverage') {
            steps {
                bat './node_modules/.bin/nyc npm test'
                bat 'nyc npm test'  
                echo 'Code coverage report generated.'
            }
        }
        stage('Build') {
            steps {
                bat 'npm run build'
                echo 'Building the application...'
            }
        }
        stage('Deploy') {
            steps {
                bat 'npm run deploy'
                echo 'Deploying the application...'
            }
        }
        stage('Archive Coverage') {
            steps {
                publishHTML(target: [
                reportName: 'Code Coverage Report',
                reportDir: 'coverage', 
                reportFiles: 'index.html',
                alwaysLinkToLastBuild: true,
                keepAll: true
               ])
            }
        }

    }
    
    post {
        always {
            archiveArtifacts artifacts: 'coverage/**', 
            allowEmptyArchive: true
            // Archive coverage reports
            publishHTML(target: [
                reportDir: 'coverage',
                reportFiles: 'index.html',
                alwaysLinkToLastBuild: true,
                reportName: 'Code Coverage Report'
            ])
        }
        success {
            emailext(
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' was successful.",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your-email@example.com'
            )
        }
        failure {
            emailext(
                subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' has failed.",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your-email@example.com'
            )
        }
    }
}
